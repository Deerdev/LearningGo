/*
1. 如果你需要导入两个代码包，而这两个代码包的导入路径的最后一级是相同的，比如: dep/lib/flag和flag，那么会产生冲突吗?
2. 如果会产生冲突，那么怎样解决这种冲突，有几种方式?
*/


/*
1.import后路径最后一级相同，不一定会冲突。
分为两种情况: 
	a.如果文件夹下文件声明的包名相同，则肯定冲突，会报错redeclared。 
	b.如果文件夹下文件声明的包名不同，也不会冲突。
2.如果冲突，我能想到的解决方式: 
	a.给包设置别名,调用的时候来区分开不同的package,比如:import(b "bbbb")
	b.导入的点操作，import(. "bbbb")。这样就可以直接调用bbbb下面的函数而不用再bbbb.f uncname的方式调用。
	c.如果只是想引入某包并没有在代码中实际调用则可以这么处理来避免冲突:import(_ "bbb b")
	d.像第一问一样采取不同的包名声明，毕竟包名不一定要和文件夹名一样
	import "lib/math" 		使用 math.Sin 
	import m "lib/math" 	使用 m.Sin 
	import . "lib/math" 	使用 Sin 
	import _ "lib/math"     

	「import _」用法: 当导入一个包时，该包下的文件里所有init()函数都会被执行，然而，有些时候我们并不需要把整个包都导入进来，仅仅是是希望它执行init()函数而已。这个时候就可以使用 import _ 引用该包。即使用【import _ 包路径】只是引用该包，仅仅是为了调用init()函数，所以无法通过包名来调用包中的其他函数
*/

/*
1 导入包时，import的是相对src的相对文件路径，使用包内的函数时，其限定符是:包名.函
数名(),压根与程序的文件名没有啥关系.
2 大写:Prubic;小写:private.
*/